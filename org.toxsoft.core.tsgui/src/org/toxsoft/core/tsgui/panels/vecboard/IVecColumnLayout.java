package org.toxsoft.core.tsgui.panels.vecboard;

import org.toxsoft.core.tsgui.utils.margins.*;

/**
 * Раскладка контролей по столбцам.
 * <p>
 * Данная раскладка не предполагает задание параметров расположения индивидуально для каждого элемента, а только для
 * колонки в целом.<br>
 * Для данной раскладки можно указывать:
 * <ul>
 * <li>количество колонок</li>
 * <li>признак одинаковости ширины колонок</li>
 * <li>поля для области расположения контролей</li>
 * <li>растояние между колонками по горизонтали</li>
 * <li>растояние между контролями по вертикали</li>
 * </ul>
 * <p>
 * Добавление контролей происходит слева-направо, сверху-вниз. Т.е если раскладка имеет 3 колонки, то четвертый контроль
 * будет добавлен как второй элемент в первую колонку.
 *
 * @author vs
 */
public interface IVecColumnLayout {

  /**
   * Возвращает количество колонок.
   *
   * @return int - количество колонок
   */
  int columnsCount();

  /**
   * Возвращает признак того, что ширина всех колонок одинакова.
   *
   * @return <b>true</b> - ширина всех колонок одинакова<br>
   *         <b>false</b> - каждая колонка может иметь собственную ширину
   */
  boolean areEqualWidth();

  /**
   * Возвращет признак изменяемости высоты ячейки при изменении размеров окна.
   *
   * @return <b>false</b> - высота ячейки изменяться<br>
   *         <b>true</b> - высота ячейки останется постоянной
   */
  boolean isHeightFixed();

  /**
   * Возвращает значения полей области, где располагаются контроли.
   *
   * @return ITsMargins - значения полей области, где располагаются контроли
   */
  ITsMargins margins();

  /**
   * Расстояние между колонками по горизонтали в пикселях.
   *
   * @return int - расстояние между колонками по горизонтали в пикселях
   */
  int horSpace();

  /**
   * Расстояние между контролями по вертикали в пикселях.
   *
   * @return int - расстояние между контролями по вертикали в пикселях
   */
  int vertSpace();

}
