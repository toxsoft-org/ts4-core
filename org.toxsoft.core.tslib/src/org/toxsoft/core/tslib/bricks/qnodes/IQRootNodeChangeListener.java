package org.toxsoft.core.tslib.bricks.qnodes;

import org.toxsoft.core.tslib.coll.helpers.*;

/**
 * {@link IQNode} tree hierarch change listener.
 * <p>
 * Listener events are generated by tree root node {@link IQRootNode}.
 *
 * @author goga
 */
public interface IQRootNodeChangeListener {

  /**
   * Called when node content has been changed without tree structure change.
   *
   * @param aSource {@link IQRootNode} - the event source
   * @param aNode {@link IQNode} - the changed node
   */
  void onNodeContentChanged( IQRootNode aSource, IQNode aNode );

  /**
   * Called when tree structure has been changed.
   * <p>
   * According to <code>aOp</code> value there are different reasons of structure change:
   * <ul>
   * <li>{@link ECrudOp#CREATE} - new node added with ID <code>aChildNodeId</code>;</li>
   * <li>{@link ECrudOp#REMOVE} - child node with ID <code>aChildNodeId</code> was removed;</li>
   * <li>{@link ECrudOp#EDIT} - properties of node with ID <code>aChildNodeId</code> has been changed without changes in
   * tree structure;</li>
   * <li>{@link ECrudOp#LIST} - there is changes in subtree structure affecting several nodes at once. Usually all
   * childs need to be recreated. In this case value of argument <code>aChildNodeId</code> is ignored and may be
   * <code>null</code>.</li>
   * </ul>
   *
   * @param aSource {@link IQRootNode} - the event source
   * @param aNode {@link IQNode} - root of the changed subtree
   * @param aOp {@link ECrudOp} - the reason of change
   * @param aChildNodeId String - affected node ID or <code>null</code>
   */
  void onNodeSubtreeChanged( IQRootNode aSource, IQNode aNode, ECrudOp aOp, String aChildNodeId );

}
